name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH Key for VPS
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}

      - name: SSH into VPS and Deploy
        run: |
            # Adiciona o host da VPS ao known_hosts
            ssh-keyscan -H "${{ secrets.VPS_SSH_HOST }}" >> ~/.ssh/known_hosts

            # --- MUDANÇA AQUI: Adicionámos o -vvv para depuração máxima ---
            ssh -vvv ${{ secrets.VPS_SSH_USER }}@${{ secrets.VPS_SSH_HOST }} "
              echo '==> 1. Conectado! A aceder ao diretório do projeto...'
              cd /var/www/amemiya

              echo '==> 2. A puxar o código mais recente...'
              git pull origin main

              echo '==> 3. A construir a nova imagem da aplicação...'
              # (Construímos a imagem primeiro)
              docker-compose -f docker-compose.prod.yml build

              echo '==> 4. A parar e remover os containers antigos (para evitar o bug ContainerConfig)...'
              # (Esta é a correção crucial)
              docker-compose -f docker-compose.prod.yml down --remove-orphans

              echo '==> 5. A iniciar os novos containers a partir da imagem construída...'
              docker-compose -f docker-compose.prod.yml up -d
              # --- FIM DAS MUDANÇAS ---

              echo '==> 6. A instalar dependências do PHP (Composer)...'
              docker-compose -f docker-compose.prod.yml exec app composer install --no-dev --optimize-autoloader

              echo '==> 7. A instalar dependências do Node (NPM)...'
              docker-compose -f docker-compose.prod.yml exec app npm ci

              echo '==> 8. A compilar os ficheiros CSS/JS (Vite)...'
              docker-compose -f docker-compose.prod.yml exec app npm run build

              echo '==> 9. A executar os comandos finais do Laravel (Migrate & Optimize)...'
              docker-compose -f docker-compose.prod.yml exec app php artisan migrate --force
              docker-compose -f docker-compose.prod.yml exec app php artisan optimize

              echo '==> DEPLOY AUTOMÁTICO CONCLUÍDO!'
              "
